// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.subsystems.intake;

import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Intake extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    private final VictorSP leftIntake;
    // private final VictorSP rightIntake;
    double aSpeed;
    double bSpeed;
    double ySpeed;
    double xSpeed;
    boolean twoMotors;

    public Intake() {
        SmartDashboard.putNumber("aSpeed", 0.0);
        SmartDashboard.putNumber("bSpeed", 0.0);
        SmartDashboard.putNumber("ySpeed", 0.0);
        SmartDashboard.putNumber("xSpeed", 0.0);
        SmartDashboard.putBoolean("Two Motors", false);
        
        leftIntake = new VictorSP(1);
        // rightIntake = new VictorSP(2);
        // leftIntake.enableDeadbandElimination(true);
        // rightIntake.enableDeadbandElimination(true);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        aSpeed = SmartDashboard.getNumber("aSpeed", 0.0);
        bSpeed = SmartDashboard.getNumber("bSpeed", 0.0);
        ySpeed = SmartDashboard.getNumber("ySpeed", 0.0);
        xSpeed = SmartDashboard.getNumber("xSpeed", 0.0);
        twoMotors = SmartDashboard.getBoolean("Two Motors", false);
        
           // if (oi.getAButton()){
        //     intake.runIntake(aSpeed, twoMotors);
        //     System.out.println("Running at " + aSpeed + "% speed.");
        // } else  if (oi.getBButton()){
        //     intake.runIntake(bSpeed, twoMotors);
        //     System.out.println("Running at " + bSpeed + "% speed.");
        // } else if (oi.getYButton()){
        //     intake.runIntake(ySpeed, twoMotors);
        //     System.out.println("Running at " + ySpeed + "% speed.");
        // } else if (oi.getXButton()){
        //     intake.runIntake(xSpeed, twoMotors);
        //     System.out.println("Running at " + xSpeed + "% speed.");
        // } else {
        //     intake.runIntake(0, false);
        // }

    }

    public void runIntake(double speed, boolean twoMotors){
        if(twoMotors){
            leftIntake.setSpeed(speed);
            // rightIntake.setSpeed(speed);
        } else { 
            leftIntake.setSpeed(speed);
            
        }

       
    }
  

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

